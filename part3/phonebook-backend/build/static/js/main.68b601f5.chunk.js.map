{"version":3,"sources":["components/Persons.js","components/InpName.js","components/InpNumber.js","components/InpSearch.js","components/InpButton.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","person","deleteName","className","style","maxWidth","minWidth","name","number","type","value","id","onClick","InpName","onChange","width","InpNumber","InpSearch","InpButton","text","baseUrl","axios","get","then","response","data","newObject","post","put","window","confirm","delete","Notification","message","messageType","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","filterChange","setFilterChange","setmessage","setMessageType","useEffect","personService","initialPersons","query","event","preventDefault","parseInt","target","catch","error","setTimeout","filter","n","personsToShow","toLowerCase","split","join","indexOf","onSubmit","duplicateCheck","find","concat","returnedPerson","map","scope","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68b601f5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ person, deleteName }) => {\r\n    \r\n    return (\r\n        <table className=\"table table-hover\" style={{maxWidth:`650px`}}>\r\n            <tbody>\r\n                <tr>\r\n                    <td style={{minWidth:`200px`}}>{person.name}</td>\r\n                    <td style={{minWidth:`200px`}}>{person.number}</td>\r\n                    <td style={{minWidth:`200px`}}>\r\n                        <button className=\"btn btn-outline-success btn-sm ml-2\" type=\"button\" value={person.id} onClick={deleteName}>delete</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst InpName = ({ type, value, onChange }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>Name 😎:</label>\r\n            <input className=\"form-control\" style={{width: `250px`}}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default InpName\r\n","import React from 'react'\r\n\r\nconst InpNumber = ({ type, value, onChange }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>Phone ☎:</label>\r\n            <input className=\"form-control\"  style={{width: `250px`}}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default InpNumber","import React from 'react'\r\n\r\nconst InpSearch = ({ type, value, onChange }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>Filter shown with 🔎:</label>\r\n            <input className=\"form-control\" style={{width: `150px`}}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default InpSearch","import React from 'react'\r\n\r\nconst InpButton = ({ type, text }) => {\r\n    return (\r\n        <div>\r\n\t\t\t<button className=\"btn btn-primary mt-2\" type={type}>{text}</button>\r\n\t\t</div>\r\n    )\r\n}\r\nexport default InpButton","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletion = (person) => {\r\n  if (window.confirm(`Delete ${person.name}`)) {\r\n    return axios.delete(`${baseUrl}/${person.id}`)\r\n    .then(response => response.data)\r\n  }\r\n}\r\n\r\nexport default {getAll, create, update, deletion}","import React from 'react'\r\n\r\nconst Notification = ({ message, messageType }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={messageType}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport InpName from './components/InpName'\r\nimport InpNumber from './components/InpNumber'\r\nimport InpSearch from './components/InpSearch'\r\nimport InpButton from './components/InpButton'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    \r\n    const [ persons, setPersons ] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ searchName, setSearchName ] = useState('')\r\n    const [ filterChange, setFilterChange ] = useState(false) \r\n    const [ message, setmessage ] = useState(null)\r\n    const [ messageType, setMessageType ] = useState(null)\r\n\r\n   \r\n    useEffect(() => {\r\n    personService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n        })\r\n  }, [])\r\n\r\n    const addPerson = (event)  => {\r\n        event.preventDefault()\r\n        \r\n        const duplicateCheck = persons.find(person => person.name === newName)\r\n            if (typeof duplicateCheck !== 'undefined' && duplicateCheck.number !== newNumber) {\r\n            personService\r\n                .update(duplicateCheck.id, { name: duplicateCheck.name, number: newNumber})\r\n                .then(returnedPerson => {\r\n                    if (window.confirm(`${returnedPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\r\n                        setPersons(persons.map(person => \r\n                            person.id !== duplicateCheck.id ? person : returnedPerson))\r\n                            setMessageType('verification')\r\n                            setmessage(`The old number ${duplicateCheck.name} replaced with a new one `)\r\n                            setTimeout(() => {\r\n                                setmessage(null)\r\n                                setMessageType(null)\r\n                            }, 5000)\r\n                        }\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n                return\r\n            } else if (typeof duplicateCheck !== 'undefined') {\r\n                setNewName('')\r\n                setNewNumber('')\r\n                setMessageType('error')\r\n                setmessage(`${newName} is already added to phonebook`)\r\n                setTimeout(() => {\r\n                    setmessage(null)\r\n                    setMessageType(null)\r\n                }, 5000)\r\n                return\r\n            }\r\n\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber,\r\n        }\r\n        \r\n        personService\r\n            .create(personObject)\r\n            .then(response => {\r\n                setPersons(persons.concat(response.data))\r\n                setNewName('')\r\n                setNewNumber('')\r\n                setMessageType('verification')\r\n                setmessage(`Added ${response.name}`)\r\n                setTimeout(() => {\r\n                    setmessage(null)\r\n                    setMessageType(null)\r\n                }, 5000)\r\n            })\r\n        \r\n    } \r\n    const deleteName = (event) => {\r\n        event.preventDefault()\r\n        const id = parseInt(event.target.value)\r\n        const name = persons[id -1].name\r\n        personService.deletion(persons[id -1])\r\n        .catch(error => {\r\n            setMessageType('error')\r\n            setmessage(`Information of ${name} has already been removed from server`)\r\n            setTimeout(() => {\r\n                setmessage(null)\r\n                setMessageType('error')\r\n            }, 5000)\r\n            setPersons(persons.filter(n => n.id !== id))\r\n        })\r\n        setPersons(persons.filter(n => n.id !== id))\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n    const handleSearchName = (event) => {\r\n\t\tsetSearchName(event.target.value)\r\n\t\tsetFilterChange(true)\r\n\t}\r\n\tconst filterItems = (query) => {\r\n\t\tconst filter_result = persons.filter(person => person.name.toLowerCase().split(' ').join(' ').indexOf(query.toLowerCase()) !== -1)\r\n\t\treturn filter_result\r\n\t}\r\n    const personsToShow = filterChange\r\n\t\t? filterItems(searchName)\r\n\t\t: persons\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={message} messageType={messageType} />\r\n            <div>\r\n\t\t\t\t<InpSearch type = \"text\" value = {searchName} onChange = {handleSearchName} />\r\n            </div>\r\n            <h1>Add a new number</h1>\r\n            <form onSubmit={addPerson}>\r\n                <InpName\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={handleNameChange}\r\n                />\r\n                <InpNumber\r\n                    type=\"text\"\r\n                    value={newNumber}\r\n                    onChange={handleNumberChange}\r\n                />\r\n                <InpButton\r\n                    type=\"submit\"\r\n                    text=\"add\"\r\n                />\r\n            </form>\r\n            <h1>Numbers</h1>\r\n            <div>\r\n                <table className=\"table table-hover\" style={{maxWidth:`650px`}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" style={{minWidth:`200px`}}>Name</th>\r\n                            <th scope=\"col\" style={{minWidth:`200px`}}>Phone</th>\r\n                            <th scope=\"col\" style={{minWidth:`200px`}}>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                {personsToShow.map(person => \r\n                    <Persons key={person.id} filter={filterChange} person={person} deleteName={deleteName} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}